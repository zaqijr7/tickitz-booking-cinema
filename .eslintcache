[{"E:\\tickitz\\src\\index.js":"1","E:\\tickitz\\src\\reportWebVitals.js":"2","E:\\tickitz\\src\\App.js":"3","E:\\tickitz\\src\\Router\\Router.js":"4","E:\\tickitz\\src\\Component\\Navbar\\Navbar.js":"5","E:\\tickitz\\src\\Pages\\Authentication\\Signin\\Signin.js":"6","E:\\tickitz\\src\\Component\\AuthSectionLeft\\SectionLeft.js":"7","E:\\tickitz\\src\\Pages\\Authentication\\Signup\\Signup.js":"8","E:\\tickitz\\src\\Component\\LeftContentSignup\\LeftContentSignup.js":"9","E:\\tickitz\\src\\Component\\FormSingup\\FormSignup.js":"10","E:\\tickitz\\src\\Component\\FormSignin\\FormSignin.js":"11","E:\\tickitz\\src\\Pages\\Authentication\\Forgot-Pass\\ForgotPass.js":"12","E:\\tickitz\\src\\Component\\LeftContentForgot\\LeftContentForgot.js":"13","E:\\tickitz\\src\\Component\\FormForgot\\FormForgot.js":"14","E:\\tickitz\\src\\Pages\\Home\\Home.js":"15","E:\\tickitz\\src\\Component\\HomeComponent\\RowTitle.js":"16","E:\\tickitz\\src\\Component\\FilmNowShow\\FilmNowShow.js":"17","E:\\tickitz\\src\\Component\\NowShow\\NowShow.js":"18","E:\\tickitz\\src\\Component\\UpcomingMovie\\UpcomingMovie.js":"19","E:\\tickitz\\src\\Component\\Subcription\\Subcription.js":"20","E:\\tickitz\\src\\Component\\Footer\\Footer.js":"21","E:\\tickitz\\src\\Pages\\MovieDetail\\MovieDetail.js":"22","E:\\tickitz\\src\\Component\\MovieInfo\\MovieInfo.js":"23","E:\\tickitz\\src\\Component\\ButtonTimeTicket\\ButtonTimeTicket.js":"24","E:\\tickitz\\src\\Component\\CinemaCard\\CInemaCard.js":"25","E:\\tickitz\\src\\Pages\\Order\\Order.js":"26","E:\\tickitz\\src\\Component\\BodyOrder\\BodyOrder.js":"27","E:\\tickitz\\src\\Pages\\Payment\\Payment.js":"28","E:\\tickitz\\src\\Component\\BodyPayment\\BodyPayment.js":"29","E:\\tickitz\\src\\Component\\ButtonPayment\\ButtonPayment.js":"30","E:\\tickitz\\src\\DataDummy\\ButtonPaymentList.js":"31","E:\\tickitz\\src\\Pages\\Ticket\\Ticket.js":"32","E:\\tickitz\\src\\Component\\TicketCard\\TicketCard.js":"33","E:\\tickitz\\src\\Pages\\Profile\\Profile.js":"34","E:\\tickitz\\src\\Component\\BodyProfile\\BodyProfile.js":"35","E:\\tickitz\\src\\Component\\SideProfileInfo\\SideProfileInfo.js":"36","E:\\tickitz\\src\\Component\\FormAccountSet\\FormAccountSet.js":"37","E:\\tickitz\\src\\Pages\\OrderHistory\\OrderHistory.js":"38","E:\\tickitz\\src\\Component\\BodyOrderHistory\\BodyOrderHistory.js":"39","E:\\tickitz\\src\\Component\\InfoOrderHistory\\InfoOrderHistory.js":"40","E:\\tickitz\\src\\Component\\CardTicketHistory\\CardTicketHistory.js":"41","E:\\tickitz\\src\\Pages\\Admin\\Admin.js":"42","E:\\tickitz\\src\\Component\\BodyAdmin\\BodyAdmin.js":"43","E:\\tickitz\\src\\DataDummy\\DataMovieNowShow.js":"44","E:\\tickitz\\src\\DataDummy\\CinemaList.js":"45","E:\\tickitz\\src\\Router\\PrivateRoute.js":"46","E:\\tickitz\\src\\Redux\\store.js":"47","E:\\tickitz\\src\\Redux\\Reducer\\index.js":"48","E:\\tickitz\\src\\Redux\\Reducer\\auth.js":"49","E:\\tickitz\\src\\Redux\\Action\\auth.js":"50","E:\\tickitz\\src\\Helper\\http.js":"51","E:\\tickitz\\src\\Redux\\Reducer\\register.js":"52","E:\\tickitz\\src\\Redux\\Action\\register.js":"53","E:\\tickitz\\src\\Redux\\Reducer\\transaction.js":"54","E:\\tickitz\\src\\Redux\\Action\\transaction.js":"55","E:\\tickitz\\src\\Redux\\Reducer\\findSchedule.js":"56","E:\\tickitz\\src\\Redux\\Action\\findSchedule.js":"57","E:\\tickitz\\src\\Redux\\Reducer\\movieSelected.js":"58","E:\\tickitz\\src\\Redux\\Action\\movieSelected.js":"59"},{"size":712,"mtime":1610321914021,"results":"60","hashOfConfig":"61"},{"size":362,"mtime":499162500000,"results":"62","hashOfConfig":"61"},{"size":227,"mtime":1611990445091,"results":"63","hashOfConfig":"61"},{"size":2106,"mtime":1612494614205,"results":"64","hashOfConfig":"61"},{"size":5468,"mtime":1612676104204,"results":"65","hashOfConfig":"61"},{"size":1402,"mtime":1610240891587,"results":"66","hashOfConfig":"61"},{"size":266,"mtime":1611975255481,"results":"67","hashOfConfig":"61"},{"size":986,"mtime":1610249583537,"results":"68","hashOfConfig":"61"},{"size":2280,"mtime":1610182774133,"results":"69","hashOfConfig":"61"},{"size":4702,"mtime":1612075411785,"results":"70","hashOfConfig":"61"},{"size":5363,"mtime":1612345922434,"results":"71","hashOfConfig":"61"},{"size":1101,"mtime":1610249517070,"results":"72","hashOfConfig":"61"},{"size":2584,"mtime":1610245145074,"results":"73","hashOfConfig":"61"},{"size":1350,"mtime":1610249233472,"results":"74","hashOfConfig":"61"},{"size":1394,"mtime":1612166775086,"results":"75","hashOfConfig":"61"},{"size":1183,"mtime":1610256098599,"results":"76","hashOfConfig":"61"},{"size":1028,"mtime":1612166979398,"results":"77","hashOfConfig":"61"},{"size":1300,"mtime":1610264772824,"results":"78","hashOfConfig":"61"},{"size":4612,"mtime":1610678433676,"results":"79","hashOfConfig":"61"},{"size":1827,"mtime":1610272415494,"results":"80","hashOfConfig":"61"},{"size":3410,"mtime":1610677257007,"results":"81","hashOfConfig":"61"},{"size":3035,"mtime":1612589323581,"results":"82","hashOfConfig":"61"},{"size":3542,"mtime":1612314128334,"results":"83","hashOfConfig":"61"},{"size":3828,"mtime":1612588256829,"results":"84","hashOfConfig":"61"},{"size":5251,"mtime":1612580767326,"results":"85","hashOfConfig":"61"},{"size":801,"mtime":1612318281755,"results":"86","hashOfConfig":"61"},{"size":18081,"mtime":1612591964202,"results":"87","hashOfConfig":"61"},{"size":820,"mtime":1612369905574,"results":"88","hashOfConfig":"61"},{"size":8487,"mtime":1612592172905,"results":"89","hashOfConfig":"61"},{"size":734,"mtime":1610676877898,"results":"90","hashOfConfig":"61"},{"size":751,"mtime":1610417340244,"results":"91","hashOfConfig":"61"},{"size":2269,"mtime":1612592756775,"results":"92","hashOfConfig":"61"},{"size":9351,"mtime":1612593925022,"results":"93","hashOfConfig":"61"},{"size":688,"mtime":1612494544849,"results":"94","hashOfConfig":"61"},{"size":513,"mtime":1610526203253,"results":"95","hashOfConfig":"61"},{"size":12736,"mtime":1612677385025,"results":"96","hashOfConfig":"61"},{"size":11931,"mtime":1612678115586,"results":"97","hashOfConfig":"61"},{"size":685,"mtime":1612494634169,"results":"98","hashOfConfig":"61"},{"size":557,"mtime":1612663136805,"results":"99","hashOfConfig":"61"},{"size":2518,"mtime":1612661398781,"results":"100","hashOfConfig":"61"},{"size":2355,"mtime":1612661047300,"results":"101","hashOfConfig":"61"},{"size":1434,"mtime":1612097874151,"results":"102","hashOfConfig":"61"},{"size":18632,"mtime":1612750998652,"results":"103","hashOfConfig":"61"},{"size":4778,"mtime":1610631664951,"results":"104","hashOfConfig":"61"},{"size":946,"mtime":1610670413277,"results":"105","hashOfConfig":"61"},{"size":713,"mtime":1612317999927,"results":"106","hashOfConfig":"61"},{"size":343,"mtime":1612008260867,"results":"107","hashOfConfig":"61"},{"size":488,"mtime":1612313988296,"results":"108","hashOfConfig":"61"},{"size":640,"mtime":1612602312879,"results":"109","hashOfConfig":"61"},{"size":1491,"mtime":1612677498244,"results":"110","hashOfConfig":"61"},{"size":294,"mtime":1612065988952,"results":"111","hashOfConfig":"61"},{"size":523,"mtime":1612070028538,"results":"112","hashOfConfig":"61"},{"size":841,"mtime":1612072381828,"results":"113","hashOfConfig":"61"},{"size":1394,"mtime":1612591689485,"results":"114","hashOfConfig":"61"},{"size":2028,"mtime":1612591684942,"results":"115","hashOfConfig":"61"},{"size":721,"mtime":1612252727133,"results":"116","hashOfConfig":"61"},{"size":529,"mtime":1612252639760,"results":"117","hashOfConfig":"61"},{"size":802,"mtime":1612587171848,"results":"118","hashOfConfig":"61"},{"size":180,"mtime":1612313866466,"results":"119","hashOfConfig":"61"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"1juv3nx",{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"122"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"122"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"122"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"122"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"122"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"122"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"122"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"122"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"122"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"122"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"219"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"122"},"E:\\tickitz\\src\\index.js",[],["250","251"],"E:\\tickitz\\src\\reportWebVitals.js",[],"E:\\tickitz\\src\\App.js",[],"E:\\tickitz\\src\\Router\\Router.js",[],"E:\\tickitz\\src\\Component\\Navbar\\Navbar.js",[],"E:\\tickitz\\src\\Pages\\Authentication\\Signin\\Signin.js",[],"E:\\tickitz\\src\\Component\\AuthSectionLeft\\SectionLeft.js",[],"E:\\tickitz\\src\\Pages\\Authentication\\Signup\\Signup.js",[],"E:\\tickitz\\src\\Component\\LeftContentSignup\\LeftContentSignup.js",[],"E:\\tickitz\\src\\Component\\FormSingup\\FormSignup.js",[],"E:\\tickitz\\src\\Component\\FormSignin\\FormSignin.js",[],"E:\\tickitz\\src\\Pages\\Authentication\\Forgot-Pass\\ForgotPass.js",[],"E:\\tickitz\\src\\Component\\LeftContentForgot\\LeftContentForgot.js",[],"E:\\tickitz\\src\\Component\\FormForgot\\FormForgot.js",[],"E:\\tickitz\\src\\Pages\\Home\\Home.js",[],"E:\\tickitz\\src\\Component\\HomeComponent\\RowTitle.js",[],"E:\\tickitz\\src\\Component\\FilmNowShow\\FilmNowShow.js",[],"E:\\tickitz\\src\\Component\\NowShow\\NowShow.js",[],"E:\\tickitz\\src\\Component\\UpcomingMovie\\UpcomingMovie.js",[],"E:\\tickitz\\src\\Component\\Subcription\\Subcription.js",[],"E:\\tickitz\\src\\Component\\Footer\\Footer.js",[],"E:\\tickitz\\src\\Pages\\MovieDetail\\MovieDetail.js",["252"],"import React, { useEffect, useState } from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\nimport './MovieDetail.css'\r\nimport MovieInfo from '../../Component/MovieInfo/MovieInfo';\r\nimport ButtonTimeTicket from '../../Component/ButtonTimeTicket/ButtonTimeTicket';\r\nimport CinemaCard from '../../Component/CinemaCard/CInemaCard';\r\nimport Footer from '../../Component/Footer/Footer';\r\nimport NavigationBar from '../../Component/Navbar/Navbar';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport http from '../../Helper/http';\r\nimport { errorMsg } from '../../Redux/Action/findSchedule';\r\n\r\nfunction MovieDetail() {\r\n    const [schedule, setSchedule] = useState([])\r\n    const [status, setStatus] = useState('')\r\n    const date = useSelector(state => state.schedule.showDate)\r\n    const city = useSelector(state => state.schedule.city)\r\n    const moviePrice = useSelector(state => state.selectedMovie.detailMovie.price)\r\n    const idMovie = useSelector(state => state.selectedMovie.detailMovie.id)\r\n    const dispatch = useDispatch()\r\n\r\n    const fetchDataSchedule = async (idMovie, date, city) => {\r\n        try{\r\n            const params = new URLSearchParams()\r\n            params.append('movie', idMovie)\r\n            params.append('city', city)\r\n            params.append('showDate', date)\r\n            const response = await http().post(`schedule`, params)\r\n            setSchedule(response.data.results)\r\n            setStatus(response.status)\r\n        }catch(err){\r\n            setSchedule([])\r\n            setStatus(404)\r\n            dispatch(errorMsg(schedule.message))\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        fetchDataSchedule(idMovie, date, city)\r\n    }, [date, city])\r\n    return (\r\n        <React.Fragment>\r\n            <NavigationBar>\r\n                <Container>\r\n                    <MovieInfo/>\r\n                    <ButtonTimeTicket/>\r\n                        <Row className=\"my-4 d-flex\">\r\n                        {\r\n                            status === 200 ? \r\n                            schedule.map(item => {\r\n                                return (\r\n                                    <CinemaCard \r\n                                    key={item.id_cinema}\r\n                                    idCinema={item.id_cinema}\r\n                                    cinema={item.name}\r\n                                    address={item.address}\r\n                                    logo={item.logo}\r\n                                    listShowTime={item.listShowTime}\r\n                                    price={moviePrice}\r\n                                    />\r\n                                )\r\n                            })\r\n                            :\r\n\r\n                            <h1 className=\"text-center\"> Opss sorry, schedule not found</h1>\r\n\r\n                        }\r\n                        </Row>\r\n                    <Footer/>\r\n                </Container> \r\n            </NavigationBar>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MovieDetail;","E:\\tickitz\\src\\Component\\MovieInfo\\MovieInfo.js",["253"],"import React, { useEffect, useState } from 'react'\r\nimport { Row, Col, Card } from 'react-bootstrap'\r\nimport { useParams } from 'react-router-dom'\r\nimport http from '../../Helper/http'\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\nimport { selectedMovie } from '../../Redux/Action/movieSelected'\r\n\r\nfunction MovieInfo() {\r\n    const { id } = useParams()\r\n    const [movie, setMovie] = useState({})\r\n    const dispatch = useDispatch()\r\n    const releaseDate = movie.relaseDate\r\n    const releaseDateFix = moment(releaseDate).format('LL')\r\n    const getDetailMovie = async () => {\r\n        const getMovie = await http().get(`/movies/${id}`)\r\n        setMovie(getMovie.data.results)\r\n        dispatch(selectedMovie(getMovie.data.results))\r\n    }\r\n    useEffect(() => {\r\n        getDetailMovie()\r\n    }, [])\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Row className=\"my-4\">\r\n                <Col lg={4} className=\"d-flex justify-content-center\">\r\n                    <Card className=\"cover-carousel\">\r\n                        <Card.Body className=\" d-flex justify-content-center align-items-center\">\r\n                            <img className=\"carousel\"src={movie.poster} alt=\"poster\" />\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n                <Col lg={8} className=\"mx-4 mx-lg-0\">\r\n                    <Col lg=\"auto\" className=\"my-5 my-lg-0\">\r\n                        <div className=\"text-center text-lg-start\">\r\n                            <h5 className=\"fw-bold fs-5\">{movie.title}</h5>\r\n                            <p className=\"text-muted\">{movie.genre}</p>                          \r\n                        </div>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <Row>\r\n                            <Col lg={4} xs={6}>\r\n                                <small className=\"text-muted\">Relase Date</small>\r\n                                <p>\r\n                                    {releaseDateFix}\r\n                                 </p>\r\n                            </Col>\r\n                            <Col lg=\"auto\" xs={6}>\r\n                                <small className=\"text-muted\">Directed by</small>\r\n                                <p>{movie.director}</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <Row className=\"row\">\r\n                            <Col lg={4} xs={6} className=\"col-lg-4  col-6\">\r\n                                <small className=\"text-muted\">Duration</small>\r\n                                <p>{movie.runtime} min</p>\r\n                            </Col>\r\n                            <Col lg=\"auto\" xs={6}>\r\n                                <small className=\"text-muted\">Casts</small>\r\n                                <p>{movie.actors}</p>\r\n                            </Col>\r\n                        </Row>                      \r\n                    </Col>\r\n                    <Col xs=\"auto\" className=\"pe-lg-5 justify-content-md-center\">\r\n                        <hr />\r\n                    </Col>\r\n                    <Col xs=\"auto\" className=\"pe-lg-5\">\r\n                        <p className=\"fw-bold fs-5\">Synopsis</p>\r\n                        <p>\r\n                            {movie.synopsis} \r\n                        </p>\r\n                    </Col>\r\n                </Col>\r\n            </Row>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MovieInfo","E:\\tickitz\\src\\Component\\ButtonTimeTicket\\ButtonTimeTicket.js",[],"E:\\tickitz\\src\\Component\\CinemaCard\\CInemaCard.js",["254","255"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Row, Col, Container, Form } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link, useParams } from 'react-router-dom'\r\nimport { selectedTime, selectedCinema, selectedCinemaName, selectedShowTimeName } from '../../Redux/Action/transaction'\r\nimport http from '../../Helper/http'\r\n\r\n\r\nfunction CinemaCard(props) {\r\n    const { id } = useParams()\r\n    const [time, setTime] = useState('')\r\n    const dispatch = useDispatch()\r\n    const cinemaId = useSelector(state => state.transaction.id_cinema)\r\n\r\n    const handleClickTime = (event) => {\r\n        event.preventDefault()\r\n        setTime(event.target.id)\r\n        dispatch(selectedTime(event.target.id))\r\n        dispatch(selectedCinema(props.idCinema))\r\n    }\r\n\r\n    // const selectCinema = () => {\r\n        \r\n    // }\r\n\r\n    const getNameCinema = async (idCinema) => {\r\n        const dataCinema = await http().get(`/cinemas/${idCinema}`)\r\n        dispatch(selectedCinemaName(dataCinema.data.results.name))\r\n    }\r\n\r\n\r\n    // const getNameShowtime = async (dataShowTime) => {\r\n    //     try {\r\n    //         const dataTime = await http().get(`showtime/${dataShowTime}`)\r\n    //         setShowTime(dataTime.data.results.name)\r\n    //     } catch (err) {\r\n    //         setStatusRes(500)\r\n    //     }\r\n    // }\r\n\r\n    useEffect(() => {\r\n        getNameCinema(cinemaId)\r\n        // showtimeName(time)\r\n    }, [cinemaId])\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Col lg={4} className=\"my-3\">\r\n                <Form id={props.idCinema}>\r\n                    <Card className=\"border rounded my-4 my-lg-0 card-shadow\">\r\n                        <Card.Body className=\"py-4 px-1\">\r\n                            <Container>\r\n                                <Row className=\"border-3\">\r\n                                    <Col lg={6} className=\"d-flex justify-content-center align-items-center\">\r\n                                        <img src={props.logo} className=\"logo-cinema\" alt=\"cinema logo\" />\r\n                                    </Col>\r\n                                    <Col lg={6} className=\"text-center text-lg-start mt-2 mt-lg-0\">\r\n                                        <p className=\"fs-5 fw-bold\">{props.cinema}</p>\r\n                                        <small className=\"text-muted\" style={{ fontSize: 12 }}>{props.address}</small>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"border-bottom my-3\">\r\n                                </Row>\r\n                                <Row className=\"my-3\">\r\n                                    {\r\n                                        props.listShowTime.map(time => {\r\n                                            return (\r\n                                                <Col xs={4} className='py-3' style={{ fontSize: 12 }}>\r\n                                                    <button id={time[0].id} className={`text-muted text-center bg-transparent border-0 btn-time`} onClick={(e) => handleClickTime(e)}>{time[0].name}</button>\r\n                                                </Col>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </Row>\r\n                                <Row className=\"mt-4\">\r\n                                    <Col xs={6}>\r\n                                        <p className=\"text-muted\">Price</p>\r\n                                    </Col>\r\n                                    <Col xs={6} className=\"d-flex justify-content-end\">\r\n                                        <p className=\"text-right fw-bold\">{`$${props.price}.00/seat`}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"mt-4\">\r\n                                    <Col xs={6} className=\"d-flex justify-content-center align-items-center\">\r\n                                        {\r\n                                            time\r\n                                                ?\r\n                                                <Link to={`/moviedetail/${id}/order/`}>\r\n                                                    <button className=\"btn-booknow text-white border-0 rounded-3\">Book Now</button>\r\n                                                </Link>\r\n                                                :\r\n                                                <button className=\"btn-booknow text-white border-0 rounded-3\" disabled>Book Now</button>\r\n                                        }\r\n                                    </Col>\r\n                                    <Col xs={6} className=\"d-flex justify-content-end\">\r\n                                        <p className=\"text-right fw-bold font-color-costums\">Add To Cart</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Form>\r\n            </Col>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default CinemaCard;","E:\\tickitz\\src\\Pages\\Order\\Order.js",[],"E:\\tickitz\\src\\Component\\BodyOrder\\BodyOrder.js",["256","257","258","259","260"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Row, Col, Container } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport http from '../../Helper/http'\r\nimport moment from 'moment'\r\nimport { selectedSeat, totalPayment } from '../../Redux/Action/transaction'\r\n\r\nfunction BodyOrder(props) {\r\n    const [statusRes, setStatusRes] = useState('')\r\n    const [cinema, setCinema] = useState('')\r\n    const [seatSold, setSeatSold] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const titleMovie = useSelector(state => state.selectedMovie.detailMovie.title)\r\n    const priceMovie = useSelector(state => state.selectedMovie.detailMovie.price)\r\n    const showDate = useSelector(state => state.schedule.showDate)\r\n    const cinemaName = useSelector(state => state.transaction.cinemaName)\r\n    const idCinema = useSelector(state => state.transaction.id_cinema)\r\n    const showtimeName = useSelector(state => state.transaction.showtimeName)\r\n    const dispatch = useDispatch()\r\n    const [seat, setSeat] = useState([])\r\n\r\n\r\n    const getDataSeatsIsSold = async (selectedMovie, cinemaName, selectedShowTime, showDate) => {\r\n        try {\r\n            const seatIsSold = await http().get(`/seat/sold?movie=${selectedMovie}&cinema=${cinemaName}&showTime=${selectedShowTime}&showDate=${showDate}`)\r\n            if (seatIsSold.data.results.listSold !== null) {\r\n                setSeatSold(seatIsSold.data.results.listSold)\r\n            } else {\r\n                setSeatSold('a, b')\r\n            }\r\n        } catch (err) {\r\n            setStatusRes(500)\r\n        }\r\n    }\r\n\r\n    const handleClickChooseSeat = (event) => {\r\n        console.log(event.target.checked);\r\n        if (event.target.id && event.target.checked === false) {\r\n            const newData = seat.filter(seat => seat !== event.target.id)\r\n            setSeat(newData)\r\n            if (event.target.id.indexOf('F10') > -1) {\r\n                const loveNest = priceMovie * 2\r\n                setPrice(price - loveNest)\r\n                dispatch(totalPayment(price - loveNest))\r\n            } else {\r\n                setPrice(price - priceMovie)\r\n                dispatch(totalPayment(price - priceMovie))\r\n            }\r\n        } else {\r\n            setSeat([...seat, event.target.id])\r\n            if (event.target.id.indexOf('F10') > -1) {\r\n                const loveNest = priceMovie * 2\r\n                setPrice(price + loveNest)\r\n                dispatch(totalPayment(price + loveNest))\r\n            } else {\r\n                setPrice(price + priceMovie)\r\n                dispatch(totalPayment(price + priceMovie))\r\n            }\r\n        }\r\n    }\r\n\r\n    const detailCinema = async (idCinema) => {\r\n        try {\r\n            const detailCinema = await http().get(`cinemas/${idCinema}`)\r\n            setCinema(detailCinema.data.results.logo)\r\n        } catch (err) {\r\n            setStatusRes(500)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        detailCinema(idCinema)\r\n\r\n    }, [])\r\n    // console.log(seatSold, '<<<<<< ini seat sold');\r\n\r\n\r\n    useEffect(() => {\r\n        getDataSeatsIsSold(titleMovie, cinemaName, showtimeName, showDate)\r\n        dispatch(selectedSeat(seat))\r\n    }, [seat]);\r\n    return (\r\n        <Row className=\"p-3 px-lg-0\">\r\n            <Col lg={7}>\r\n                <Row>\r\n                    <Col>\r\n                        <p className=\"fs-5 fw-bold\">Movie Selected</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"bg-white  rounded-3\">\r\n                        <div className=\"py-3 px-3 d-flex align-items-center\">\r\n                            <Col xs={6} className=\"ms-2\">\r\n                                {titleMovie}\r\n                            </Col>\r\n                            <Col xs={6} className=\"d-flex justify-content-end\">\r\n                                <Link className=\"btn me-3 btn-change_movie d-flex justify-content-center align-items-center\" to='/'>\r\n                                    <small className=\"font-color-costum fw-bold\">Change Movie</small>\r\n                                </Link>\r\n                            </Col>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"mt-4\">\r\n                        <p className=\"fs-5 fw-bold\">Chose Your Seat</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"bg-white py-5 px-3 bg-white  rounded-3\">\r\n                        <Row className=\"mt-4\">\r\n                            <small className=\"text-muted fw-bold text-center\">Screen</small>\r\n                        </Row>\r\n                        <div className=\"row py-1 rounded-pill bg-gray-light mx-4 my-3\" />\r\n                        <Row>\r\n                            <Col lg={6}>\r\n                                <Card className=\"border-0\">\r\n                                    <Card.Body className=\" py-3 px-1\">\r\n                                        {['A', 'B', 'C', 'D', 'E', 'F', 'G'].map(row => {\r\n                                            return (\r\n                                                <Row className=\"gap-2 my-2 justify-content-center d-flex flex-d\">\r\n                                                    <div className=\"seat-layout text-center\">{row}</div>\r\n                                                    {[1, 2, 3, 4, 5, 6, 7].map(column => {\r\n                                                        return (\r\n                                                            <>\r\n                                                               {\r\n                                                                   seatSold.split(',').indexOf(`${row}${column}`) > -1 ?\r\n                                                                   <input type=\"checkbox\" id={`${row}${column}`} onClick={(event) => handleClickChooseSeat(event)} className={`seat-layout btn-seat-layout btn-seat`} disabled/>\r\n                                                                   :\r\n                                                                   <input type=\"checkbox\" id={`${row}${column}`} onClick={(event) => handleClickChooseSeat(event)} className={`seat-layout btn-seat-layout btn-seat`}/>\r\n                                                               }\r\n                                                            </>\r\n                                                        )\r\n                                                    })}\r\n                                                </Row>\r\n                                            )\r\n                                        })}\r\n                                        <Row className=\"gap-2 my-2 justify-content-center\">\r\n                                            <div className=\"seat-layout text-muted\" />\r\n                                            <div className=\"seat-layout badge text-muted\">1</div>\r\n                                            <div className=\"seat-layout badge text-muted\">2</div>\r\n                                            <div className=\"seat-layout badge text-muted\">3</div>\r\n                                            <div className=\"seat-layout badge text-muted\">4</div>\r\n                                            <div className=\"seat-layout badge text-muted\">5</div>\r\n                                            <div className=\"seat-layout badge text-muted\">6</div>\r\n                                            <div className=\"seat-layout badge text-muted\">7</div>\r\n                                        </Row>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                            <Col lg={6}>\r\n                                <Card className=\"card border-0\">\r\n                                    <Card.Body className=\"card-body py-3 px-1\">\r\n                                        {['A', 'B', 'C', 'D', 'E', 'F', 'G'].map(row => {\r\n                                            return (\r\n                                                <Row className=\"gap-2 my-2 justify-content-center\">\r\n                                                    <div className=\"seat-layout text-center d-lg-none\">{row}</div>\r\n                                                    {[8, 9, 10, 11, 12, 13, 14].filter(col => row === 'F' && col !== 11 || row !== 'F').map(column => {\r\n                                                        return (\r\n                                                            <>\r\n                                                                {\r\n                                                                    row === 'F' && column === 10 ?\r\n                                                                    <>\r\n                                                                        {\r\n                                                                        seatSold.split(',').indexOf(`${row}${column}`) > -1 ?\r\n                                                                        <input type=\"checkbox\" id={`${row}${column}`} onClick={(event) => handleClickChooseSeat(event)} className=\"seat-layout_love-nest btn-seat-layout_love-nest btn-seat bg-gray-light\" style={{ width: 60 }} disabled />\r\n                                                                        :\r\n                                                                        <input type=\"checkbox\" id={`${row}${column}`} onClick={(event) => handleClickChooseSeat(event)} className=\"seat-layout_love-nest btn-seat-layout_love-nest btn-seat bg-gray-light\" style={{ width: 60 }} />\r\n                                                                        }\r\n                                                                    </>\r\n                                                                    :\r\n                                                                    <>\r\n                                                                        {\r\n                                                                        seatSold.split(',').indexOf(`${row}${column}`) > -1 ?\r\n                                                                        <input type=\"checkbox\" id={`${row}${column}`} onClick={(event) => handleClickChooseSeat(event)} className=\"seat-layout btn-seat-layout btn-seat bg-gray-light\" disabled/>\r\n                                                                        :\r\n                                                                        <input type=\"checkbox\" id={`${row}${column}`} onClick={(event) => handleClickChooseSeat(event)} className=\"seat-layout btn-seat-layout btn-seat bg-gray-light\"/>\r\n                                                                        }\r\n                                                                    </>\r\n                                                                }\r\n                                                            </>\r\n                                                        )\r\n                                                    })\r\n                                                    }\r\n                                                </Row>\r\n                                            )\r\n                                        })\r\n                                        }\r\n                                        <Row className=\"gap-2 my-2 justify-content-center\">\r\n                                            <div className=\"seat-layout text-muted d-lg-none\" />\r\n                                            <div className=\"seat-layout badge text-muted\">8</div>\r\n                                            <div className=\"seat-layout badge text-muted\">9</div>\r\n                                            <div className=\"seat-layout badge text-muted\">10</div>\r\n                                            <div className=\"seat-layout badge text-muted\">11</div>\r\n                                            <div className=\"seat-layout badge text-muted\">12</div>\r\n                                            <div className=\"seat-layout badge text-muted\">13</div>\r\n                                            <div className=\"seat-layout badge text-muted\">14</div>\r\n                                        </Row>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"justify-content-center\">\r\n                            Seating Key\r\n                            </Row>\r\n                        <Row className=\"mx-3 my-3 justify-content-center\">\r\n                            <Col md=\"auto\" className=\"d-flex mt-3\">\r\n                                <div className=\"seat-layout bg-gray-light me-2\" /> Available\r\n                                </Col>\r\n                            <Col md=\"auto\" className=\"d-flex mt-3\">\r\n                                <div className=\"seat-layout bg-theme me-2\" /> Selected\r\n                                </Col>\r\n                            <Col md=\"auto\" className=\"d-flex mt-3\">\r\n                                <div className=\"seat-layout bg-pink me-2\" /> Love Nest\r\n                                </Col>\r\n                            <Col md=\"auto\" className=\"d-flex mt-3\">\r\n                                <div className=\"seat-layout bg-dark-ash me-2\" /> Sold\r\n                                </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"my-4\">\r\n                    <Col md={12} lg={5} className=\"d-grid p-0  my-3 my-lg-0\">\r\n                        <Link className=\"btn border-theme fw-bold font-color-costum rounded py-2\" to=\"/\"> Change your movie </Link>\r\n                    </Col>\r\n                    <Col lg={2} className=\"d-lg-block d-none\" />\r\n                    <Col md={12} lg={5} className=\"d-grid p-0 my-3 my-lg-0\">\r\n                        <Link className=\"btn bg-theme text-white fw-bold rounded py-2 border-0\" to={`/payment`}>Book Now</Link>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col lg={5} className=\"px-4\">\r\n                <Row>\r\n                    <Col>\r\n                        <p className=\"fs-5 fw-bold\">Order Info</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row className=\"row\">\r\n                    <Card className=\"card shadow border-0 rounded my-4 my-lg-0\">\r\n                        <Card.Body className=\"card-body py-4 px-2\">\r\n                            <Container>\r\n                                <Row className=\"border-3 d-flex flex-column\">\r\n                                    <Col className=\"d-flex justify-content-center align-items-center mt-2\">\r\n                                        <img src={cinema} alt={cinema} className=\"logo-cinema-order\" />\r\n                                    </Col>\r\n                                    <Col className=\"text-center my-4\">\r\n                                        <p className=\"fs-4\">{cinemaName}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-1\">\r\n                                    <Col xs={4}>\r\n                                        <small className=\"text-muted\">Movie selected</small>\r\n                                    </Col>\r\n                                    <Col xs={8} className=\"text-end\">\r\n                                        <p className>\r\n                                            {titleMovie}\r\n                                        </p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-1\">\r\n                                    <Col xs={5} className=\"\">\r\n                                        <small className=\"text-muted\">{moment(showDate).format('LL')}</small>\r\n                                    </Col>\r\n                                    <Col xs={7} className=\"text-end\">\r\n                                        {showtimeName}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-1\">\r\n                                    <Col xs={5} className=\"col-5\">\r\n                                        <small className=\"text-muted\">One ticket price</small>\r\n                                    </Col>\r\n                                    <Col xs={7} className=\"col-7 text-end\">\r\n                                        <p className>{`$${priceMovie}`}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-1\">\r\n                                    <Col xs={5}>\r\n                                        <small className=\"text-muted\">Seat choosed</small>\r\n                                    </Col>\r\n                                    <Col xs={7} className=\"text-end\">\r\n                                        <p className>{seat.join(', ')}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-3\">\r\n                                    <hr />\r\n                                </Row>\r\n                                <Row className=\"my-1\">\r\n                                    <Col xs={5}>\r\n                                        <p className=\"fs-5\">Total Payment</p>\r\n                                    </Col>\r\n                                    <Col xs={7} className=\"text-end\">\r\n                                        <p className=\"fs-5 fw-bold font-color-costum\">{`$${price} `}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Container>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default BodyOrder;","E:\\tickitz\\src\\Pages\\Payment\\Payment.js",[],"E:\\tickitz\\src\\Component\\BodyPayment\\BodyPayment.js",["261"],"import React from 'react'\r\nimport { Card, Col, Form, Row } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport moment from 'moment'\r\n\r\n\r\nfunction BodyPayment({children}) {\r\n    const dateShow = useSelector(state => state.schedule.showDate)\r\n    const titleMovie = useSelector(state => state.selectedMovie.detailMovie.title)\r\n    const dataTicket = useSelector(state => state.transaction.id_seat)\r\n    const priceMovie = useSelector(state => state.selectedMovie.detailMovie.price)\r\n    const showtimeName = useSelector(state => state.transaction.showtimeName)\r\n    const cinemaName = useSelector(state => state.transaction.cinemaName)\r\n    const totalPayment = useSelector(state => state.transaction.totalPayment)\r\n\r\n    return (\r\n        <Row className=\"p-3 px-lg-0\">\r\n            <Col lg={8}>\r\n                <Row>\r\n                    <Col>\r\n                        <p className=\"fs-5 fw-bold\">Payment Info</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"bg-white rounded-3 py-4 px-3\">\r\n                        <Row className=\"px-2\">\r\n                            <Col xs={6}>\r\n                                <small className=\"text-start text-muted\">Date &amp; time</small>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <p className=\"text-end\">{`${moment(dateShow).format('LL')} at ${showtimeName}`}</p>\r\n                            </Col>\r\n                            <Col xs={12} style={{marginTop: '-20px'}}>\r\n                                <hr />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"row px-2\">\r\n                            <Col xs={6}>\r\n                                <small className=\"text-start text-muted\">Movie title</small>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <p className=\"text-end\">{`${titleMovie}`}</p>\r\n                            </Col>\r\n                            <Col xs={12} style={{marginTop: '-20px'}}>\r\n                                <hr />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"px-2\">\r\n                            <Col xs={6}>\r\n                                <small className=\"text-start text-muted\">Cinema name</small>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <p className=\"text-end\">{`${cinemaName}`}</p>\r\n                            </Col>\r\n                            <Col xs={12}  style={{marginTop: '-20px'}}>\r\n                                <hr />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"px-2\">\r\n                            <Col xs={6}>\r\n                                <small className=\"text-start text-muted\">Number of tickets</small>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <p className=\"text-end\">{`${dataTicket.length} pieces`}</p>\r\n                            </Col>\r\n                            <Col xs={12} style={{marginTop: '-20px'}}>\r\n                                <hr />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"px-2\">\r\n                            <Col xs={6}>\r\n                                <small className=\"text-start text-muted\">Total payment</small>\r\n                            </Col>\r\n                            <Col xs={6}>\r\n                                <p className=\"text-end fw-bold fs-5\">{`$${totalPayment}`}</p>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col className=\"mt-4\">\r\n                        <p className=\"fs-5 fw-bold\">Choose a Payment Method</p>\r\n                    </Col>\r\n                </Row>\r\n                <Col>\r\n                    <Col className=\"bg-white py-5 px-3 bg-white  rounded-3\">\r\n                        <Row className=\"justify-content-center\">\r\n                            {children}\r\n                        </Row>\r\n                        <Row className=\"mt-3\">\r\n                            <Col className=\"pe-0 ps-5\"> \r\n                                <hr /> \r\n                            </Col>\r\n                            <Col xs={1} className=\"p-0 text-center\"> \r\n                                <small className=\"text-muted\">Or</small> \r\n                            </Col>\r\n                            <Col className=\"ps-0 pe-5\">\r\n                                <hr /> \r\n                            </Col>\r\n                        </Row>  \r\n                        <Row className=\"mt-3 text-center\">\r\n                            <p>\r\n                                Pay via cash. <Link to='/' className=\"font-color-costum text-decoration-none\">See how it work</Link> \r\n                            </p>\r\n                        </Row>                       \r\n                    </Col>\r\n                </Col>\r\n                <Row className=\"my-4\">\r\n                    <Col className=\"d-grid p-0  my-2 mt-lg-3 mb-lg-5\">\r\n                        <Link className=\"btn border-theme fw-bold font-color-costum rounded py-2\" to=\"/order\">Prvious step</Link>\r\n                    </Col>\r\n                    <Col lg={2} className=\"d-lg-block d-none\" />\r\n                    <Col className=\"d-grid p-0 my-2 mt-lg-3 mb-lg-5\">\r\n                        <Link className=\"btn bg-theme text-white fw-bold rounded py-2\" to=\"/ticket\">Pay your order</Link>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n            <Col lg={4} className=\"px-4\">\r\n                <Row>\r\n                    <Col className=\"col\">\r\n                        <p className=\"fs-5 fw-bold\">Personal Info</p>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Card className=\"shadow border-0 rounded my-4 my-lg-0\">\r\n                        <Card.Body className=\"py-4 px-2\">\r\n                            <Row>\r\n                                <Form>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\"> <small className=\"text-muted\">Full Name</small></label>\r\n                                        <Form.Control type=\"text\" className=\"form-control py-2 text-muted\" id=\"exampleInputEmail1\" defaultValue=\"Jonas El Rodriguez\" />\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\"> <small className=\"text-muted\">Email</small></label>\r\n                                        <Form.Control type=\"email\" className=\"form-control py-2 text-muted\" id=\"exampleInputEmail1\" defaultValue=\"jonasrodri123@gmail.com\" />\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"exampleInputEmail1\" className=\"form-label\"> <small className=\"text-muted\">Phone Number</small></label>\r\n                                        <div className=\"input-group mb-3\">\r\n                                        <span className=\"input-group-text bg-transparent border-end-0 text-muted\">+62</span>\r\n                                        <div className=\"border my-2\" />\r\n                                        <Form.Control type=\"text\" className=\"form-control py-2 border-start-0 text-muted\" defaultValue={81445687121} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <Col className=\"warning-div py-2 px-3 rounded-3\">\r\n                                        <i className=\"fas fa-exclamation-triangle me-3\" style={{color: '#F4B740'}} />\r\n                                        Fill your data correctly.\r\n                                    </Col>\r\n                                </Form>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Row>                    \r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default BodyPayment;","E:\\tickitz\\src\\Component\\ButtonPayment\\ButtonPayment.js",[],"E:\\tickitz\\src\\DataDummy\\ButtonPaymentList.js",[],"E:\\tickitz\\src\\Pages\\Ticket\\Ticket.js",["262","263","264"],"import React, { Component, useEffect, useState } from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport Footer from '../../Component/Footer/Footer';\r\nimport NavigationBar from '../../Component/Navbar/Navbar';\r\nimport TicketCard from '../../Component/TicketCard/TicketCard';\r\nimport jwt from 'jsonwebtoken'\r\nimport './Ticket.css';\r\nimport http from '../../Helper/http';\r\n\r\nfunction Ticket() {\r\n    const [statusres, setStatusres] = useState('')\r\n    const idshowtime = useSelector(state => state.transaction.id_showtime)\r\n    const dateShow = useSelector(state => state.schedule.showDate)\r\n    const idcinema = useSelector(state => state.transaction.id_cinema)\r\n    const dataTicket = useSelector(state => state.transaction.id_seat)\r\n    const listSeat = dataTicket.join()\r\n    const idMovie = useSelector(state => state.selectedMovie.detailMovie.id)\r\n    const tokenUser = useSelector(state => state.auth.token)\r\n    const totalPayment = useSelector(state => state.transaction.totalPayment)\r\n    const dataUser = jwt.decode(tokenUser)\r\n    const idUser = dataUser.id\r\n\r\n    const handleClick = async (tokenUser, idUser, idMovie, idCinema, idShowTIme, date, seat, totalPayment) => {\r\n        const params = new URLSearchParams()\r\n        params.append('id_user', idUser)\r\n        params.append('id_movie', idMovie)\r\n        params.append('id_cinema', idCinema)\r\n        params.append('id_showtime', idShowTIme)\r\n        params.append('showDate', date)\r\n        params.append('seat', seat)\r\n        params.append('totalPayment', totalPayment)\r\n        try {\r\n           const results = await http(tokenUser).post(`transaction`, params)\r\n           console.log(results);\r\n        } catch (err) {\r\n            setStatusres(500)\r\n        }\r\n    } \r\n\r\n    useEffect(() => {\r\n        handleClick(tokenUser, idUser, idMovie, idcinema, idshowtime, dateShow, listSeat, totalPayment)\r\n    }, [])\r\n    return (\r\n        <>\r\n            <NavigationBar>\r\n                <div className=\"bg-theme\">\r\n                    <TicketCard />\r\n                </div>\r\n                <Container>\r\n                    <Footer />\r\n                </Container>\r\n            </NavigationBar>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Ticket","E:\\tickitz\\src\\Component\\TicketCard\\TicketCard.js",["265","266"],"import React, { useEffect, useState }  from 'react';\r\nimport { Card, Container, Col, Row } from 'react-bootstrap';\r\nimport Logo from '../../Assets/Images/logo.png';\r\nimport Barcode from '../../Assets/Images/bar-code.png';\r\nimport { useSelector } from 'react-redux';\r\nimport moment from 'moment'\r\nimport http from '../../Helper/http' \r\n\r\n\r\nfunction TicketCard() {\r\n        const [statusres, setStatusres] = useState('')\r\n        const [showTime, setShowTime] = useState('')\r\n        const idshowtime = useSelector(state => state.transaction.id_showtime)\r\n        const dateShow = useSelector(state => state.schedule.showDate)\r\n        const titleMovie = useSelector(state => state.selectedMovie.detailMovie.title)\r\n        const dataTicket = useSelector(state => state.transaction.id_seat)\r\n        const totalPayment = useSelector(state => state.transaction.totalPayment)\r\n        const getData = async (idShowtime) => {\r\n            try {\r\n                const dataShowTime = await http().get(`/showtime/${idShowtime}`)\r\n                setShowTime(dataShowTime.data.results.name);\r\n            } catch (err){\r\n                setStatusres(404)\r\n            }\r\n        }\r\n        useEffect(() => {\r\n            getData(idshowtime)\r\n        }, [])\r\n        return (\r\n            <>\r\n            <Container>\r\n                <Row className=\"p-3 px-lg-0\">\r\n                    <Col>\r\n                        <Card className=\"border-0 rounded-1 bg-light my-5\">\r\n                            <Card.Body className=\"py-5\">\r\n                                <Row>\r\n                                    <Col className=\"text-center\">\r\n                                        <p className=\"fw-bold fs-5\">Proof of Payment</p>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"justify-content-center\">\r\n                                    <Col xs={6} className=\"d-flex align-items-center bg-theme position-relative border-rad_out dorder-dash px-4 border-rad_top-left\">\r\n                                        <div className=\"border-rad_inward-top bg-light\" />\r\n                                        <Col>\r\n                                            <img src={Logo} className=\"ticket-logo\" alt=\"icon\" />\r\n                                        </Col>\r\n                                        <Col className=\"d-flex align-items-center justify-content-end text-white\">\r\n                                            Admit One\r\n                                        </Col>\r\n                                    </Col>\r\n                                    <Col xs={4} className=\"d-flex justify-content-center align-items-center bg-theme border-rad_top-right\">\r\n                                        <img src={Logo} className=\"ticket-logo\" alt=\"icon\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"row justify-content-center\">\r\n                                    <Col xs={6} className=\"bg-white ps-lg-5 py-lg-4 dorder-dash border-rad_end-left position-relative\">\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <smalll className=\"text-muted\">Movie</smalll>\r\n                                                <p className=\"fw-bold\">{titleMovie}</p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row className=\"row\">\r\n                                            <Col>\r\n                                                <smalll className=\"text-muted\">Date</smalll>\r\n                                                <p className=\"fw-bold\">{moment(dateShow).format('MMM Do YY')}</p>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <smalll className=\"text-muted\">Time</smalll>\r\n                                                <p className=\"fw-bold\">{showTime}</p>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <smalll className=\"text-muted\">Category</smalll>\r\n                                                <p className=\"fw-bold\">PG-13</p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <smalll className=\"text-muted\">Count</smalll>\r\n                                                <p className=\"fw-bold\">{`${dataTicket.length} pieces`}</p>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <smalll className=\"text-muted\">Seats</smalll>\r\n                                                <p className=\"fw-bold\">{dataTicket.join(', ')}</p>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <smalll className=\"text-muted\">Price</smalll>\r\n                                                <p className=\"fw-bold fs-5\">{`$${totalPayment}`}</p>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <div className=\"border-rad_inward-bottom bg-light\" />\r\n                                    </Col>\r\n                                    <Col xs={4} className=\"bg-white ps-lg-3 py-lg-4 border-rad_end-right\">\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Row>\r\n                                                    <smalll className=\"text-muted\">Movie</smalll>\r\n                                                    <p className=\"fw-bold\">{`${titleMovie}`}</p>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <smalll className=\"text-muted\">Date</smalll>\r\n                                                        <p className=\"fw-bold\">{moment(dateShow).format('MMM Do YY')}</p>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <smalll className=\"text-muted\">Time</smalll>\r\n                                                        <p className=\"fw-bold\">{`${showTime}`}</p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <smalll className=\"text-muted\">Count</smalll>\r\n                                                        <p className=\"fw-bold\">{`${dataTicket.length} pieces`}</p>\r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                        <smalll className=\"text-muted\">Seats</smalll>\r\n                                                        <p className=\"fw-bold\">{dataTicket.join(', ')}</p>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col xs={3} className=\"d-flex flex-column p-0\">\r\n                                                <img src={Barcode} className=\"bar-code\" alt=\"icon\" />\r\n                                                <img src={Barcode} className=\"bar-code\" alt=\"icon\" />\r\n                                                <img src={Barcode} className=\"bar-code\" alt=\"icon\" />\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-2 justify-content-center\">\r\n                                    <Col lg={2} className=\"col-lg-2 d-grid p-0  my-2 mt-lg-3 mb-lg-5\">\r\n                                        <button className=\"btn border border-3 fw-bold rounded py-2\"><i className=\"fas fa-download me-2\" /> Download</button>\r\n                                    </Col>\r\n                                    <Col xs={1} className=\"d-lg-block d-none\" />\r\n                                    <Col lg={2} className=\"d-grid p-0 my-2 mt-lg-3 mb-lg-5\">\r\n                                        <button className=\"btn border border-3 fw-bold rounded py-2\"> <i className=\"fas fa-print me-2\" /> Print</button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            </>\r\n        )\r\n}\r\n\r\nexport default TicketCard","E:\\tickitz\\src\\Pages\\Profile\\Profile.js",[],"E:\\tickitz\\src\\Component\\BodyProfile\\BodyProfile.js",[],"E:\\tickitz\\src\\Component\\SideProfileInfo\\SideProfileInfo.js",[],"E:\\tickitz\\src\\Component\\FormAccountSet\\FormAccountSet.js",["267"],"import React, { useEffect, useState } from 'react';\r\nimport { Alert, Card, Col, Row, Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport http from '../../Helper/http';\r\nimport { updateProfileUser } from '../../Redux/Action/auth'\r\n\r\nfunction FormAccountSet(){\r\n    const [firstName, setFirstName] = useState('')\r\n    const [lastName, setLastName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [showPass, setShowPass] = useState(false)\r\n    const [messageRes, setMessageRes] = useState('')\r\n    const [statusRes, setStatusRes] = useState('')\r\n    const [type, setType] = useState('password')\r\n    const defaultFirstName = useSelector(state => state.auth.profile.firstName)\r\n    const defaultLastName = useSelector(state => state.auth.profile.lastName)\r\n    const defaultEmail = useSelector(state => state.auth.profile.email)\r\n    const defaultPhoneNumber = useSelector(state => state.auth.profile.phoneNumber)\r\n    const token = useSelector(state => state.auth.token)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    const handleInput = (event) => {\r\n\r\n        if (event.target.name === 'firstName') {\r\n            setFirstName(event.target.value)\r\n            setStatusRes('')\r\n        } else if (event.target.name === 'lastName') {\r\n            setLastName(event.target.value)\r\n        } else if (event.target.name === 'email') {\r\n            setEmail(event.target.value)\r\n        } else if (event.target.name === 'phoneNumber') {\r\n            setPhoneNumber(event.target.value)\r\n        } else if (event.target.name === 'password') {\r\n            setPassword(event.target.value)\r\n        } else if (event.target.name === 'confirmPassword') {\r\n            setConfirmPassword(event.target.value)\r\n        }\r\n    }\r\n\r\n    const updateProfile = async () => {\r\n        const params = new URLSearchParams()\r\n        params.append('firstName', firstName || defaultFirstName)\r\n        params.append('lastName', lastName || defaultLastName)\r\n        params.append('phoneNumber', phoneNumber || defaultPhoneNumber)\r\n        params.append('email', email || defaultEmail)\r\n        params.append('password', confirmPassword)\r\n        try {\r\n            const updateProfile = await http(token).put(`/profile`, params)\r\n            dispatch(updateProfileUser(updateProfile.data.results))\r\n            setStatusRes(updateProfile.status)\r\n            const response = updateProfile.data\r\n            setMessageRes(response.message)\r\n            setTimeout(() => {\r\n                setStatusRes('')\r\n            }, 2000)\r\n        } catch (err) {\r\n            const { message } = err.data\r\n            setMessageRes(message)\r\n        }\r\n    }\r\n\r\n\r\n    const setTypePass = () => {\r\n        if(showPass){\r\n            setShowPass(!showPass)\r\n            setType('password')\r\n        }else{\r\n            setShowPass(!showPass)\r\n            setType('text')\r\n        }\r\n    }\r\n\r\n    console.log(statusRes, '<<< ini response status');\r\n    console.log(messageRes, '<<< ini response pesan');\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <Col lg={8} className=\"my-5 my-lg-0\">\r\n                <Card className=\"border-0\">\r\n                    <Card.Header className=\"bg-white d-flex pb-0 pt-3 px-4\">\r\n                        <Col xs='auto' className=\"profile-bar pb-3 text-muted\">\r\n                            Account Settings\r\n                                </Col>\r\n                        <Col xs='auto' className=\"ms-5\">\r\n                            <Link className=\"text-decoration-none text-dark\" to=\"/profile/order-history\"> Order History </Link>\r\n                        </Col>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"px-4\">\r\n                        <Row>\r\n                            <span className=\"mt-3 mb-2\"> Detail Information </span>\r\n                            <hr />\r\n                        </Row>\r\n                        {\r\n                            defaultFirstName && defaultLastName && defaultPhoneNumber === 'UNDEFINED' ?\r\n                            <Alert variant=\"warning\">Profile data has not been updated</Alert> \r\n                            :\r\n                            ''\r\n                        }\r\n                        {\r\n                            statusRes === 200 ? \r\n                            <Alert variant=\"success\">{messageRes}</Alert>\r\n                            :\r\n                            ''\r\n                        }\r\n                        <Row>\r\n                            <Col>\r\n                                <Form>\r\n                                    <Row>\r\n                                        <Col lg={6}>\r\n                                            <Form.Group controlId=\"firstName\" className=\"my-3\">\r\n                                                <Form.Label>First Name</Form.Label>\r\n                                                <Form.Control type=\"text\" className=\"form-control form-profile text-muted\" defaultValue={defaultFirstName !== 'UNDEFINED' ? defaultFirstName : ''} name=\"firstName\" onChange={(event) => handleInput(event)}/>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col lg={6}>\r\n                                            <Form.Group controlId=\"lastName\" className=\"my-3\">\r\n                                                <Form.Label>Last Name</Form.Label>\r\n                                                <Form.Control type=\"text\" className=\"form-control form-profile text-muted\" defaultValue={defaultLastName !== 'UNDEFINED' ? defaultLastName : ''} name=\"lastName\" onChange={(event) => handleInput(event)}/>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col lg={6}>\r\n                                            <Form.Group controlId=\"email\" className=\"my-3\">\r\n                                                <Form.Label >Email</Form.Label> \r\n                                                <Form.Control type=\"email\" className=\"form-control form-profile text-muted\" defaultValue ={defaultEmail} name=\"email\" onChange={(event) => handleInput(event)}/>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col lg={6}>\r\n                                            <Form.Group controlId=\"phoneNumber\" className=\"my-3\">\r\n                                                <div className=\"mb-3\">\r\n                                                    <Form.Label  className=\"form-label\"> <small className=\"text-muted\">Phone Number</small></Form.Label>\r\n                                                    <div className=\"input-group mb-3 form-profile\">\r\n                                                        <span className=\"input-group-text bg-transparent border-end-0 text-muted\">+62</span>\r\n                                                        <div className=\"border my-2\" />\r\n                                                        <Form.Control type=\"text\" className=\"form-control py-2 border-start-0 text-muted\" defaultValue={defaultPhoneNumber !== 'UNDEFINED' ? defaultPhoneNumber : ''} name=\"phoneNumber\" onChange={(event) => handleInput(event)}/>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col className=\"mt-3\">\r\n                                            Account and Privacy\r\n                                                    <hr />\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col lg={6}>\r\n                                            <Form.Group controlId=\"password\" className=\"my-3\">\r\n                                                <Form.Label>New Password</Form.Label>\r\n                                                <div className=\"d-flex input-group-pass justify-content-end align-items-center\">\r\n                                                    <Form.Control type={type} className=\"form-control form-profile\" placeholder=\"Write your password\" name=\"password\" onChange={(event) => handleInput(event)} />\r\n                                                    <span className=\"far fa-eye icon-eye me-3 text-muted\" onClick={() => setTypePass()} />\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col lg={6}>\r\n                                            <Form.Group controlId=\"confirmPassword\" className=\"my-3\">\r\n                                                <Form.Label>Confirm Password</Form.Label>\r\n                                                <div className=\"d-flex input-group-pass justify-content-end align-items-center\">\r\n                                                    {\r\n                                                        password === confirmPassword ?\r\n                                                        <Form.Control type={type} className=\"form-control form-profile\" placeholder=\"Write your password\" name=\"confirmPassword\" onChange={(event) => handleInput(event)} />\r\n                                                        :\r\n                                                        <Form.Control type={type} className=\"form-control form-profile border border-danger border-3\" placeholder=\"Write your password\" name=\"confirmPassword\" onChange={(event) => handleInput(event)} />\r\n                                                    }\r\n                                                    \r\n                                                    <span className=\"far fa-eye icon-eye me-3 text-muted\" onClick={() => setTypePass()}/>\r\n                                                </div>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col xs={6} className=\"d-grid mt-3\">\r\n                                            {\r\n                                                password === confirmPassword ?\r\n                                                <Button variant=\"trasnparent\" className=\"py-2 btn-update text-white mb-3\" onClick={() => updateProfile()}>\r\n                                                    Update Changes\r\n                                                </Button>\r\n                                                :\r\n                                                <Button variant=\"trasnparent\" className=\"py-2 btn-update text-white mb-3\" disabled>\r\n                                                    Update Changes\r\n                                                </Button>\r\n                                            }\r\n                                            \r\n                                        </Col>\r\n                                    </Row>\r\n                                </Form>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormAccountSet","E:\\tickitz\\src\\Pages\\OrderHistory\\OrderHistory.js",[],"E:\\tickitz\\src\\Component\\BodyOrderHistory\\BodyOrderHistory.js",[],"E:\\tickitz\\src\\Component\\InfoOrderHistory\\InfoOrderHistory.js",["268"],"import React, { useEffect, useState } from 'react'\r\nimport { Card, Col } from 'react-bootstrap'\r\nimport { useSelector } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport http from '../../Helper/http'\r\nimport CardTicketHistory from '../CardTicketHistory/CardTicketHistory'\r\n\r\nfunction InfoOrderHistory() {\r\n    const [ticket, setTicket] = useState([])\r\n    const token = useSelector(state => state.auth.token)\r\n    const getDataTicketHistory = async (dataToken) => {\r\n        try {\r\n            const dataTicket = await http(dataToken).get(`ticket/list`)\r\n            setTicket(dataTicket.data.results)\r\n        } catch (err) {\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getDataTicketHistory(token)\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Col lg={8} className=\"my-5 my-lg-0\">\r\n                <Card className=\"border-0\" style={{ height: '660px' }}>\r\n                    <Card.Header className=\"bg-white d-flex pb-0 pt-3 px-4\">\r\n                        <Col xs='auto'>\r\n                            <Link className=\"text-decoration-none text-dark\" to=\"/profile\"> Account Settings </Link>\r\n                        </Col>\r\n                        <Col xs='auto' className=\"ms-5 profile-bar pb-3 text-muted\">\r\n                            <Link className=\"text-decoration-none text-muted\" to=\"/order-history\"> Order History </Link>\r\n                        </Col>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"px-5 overflow-auto\">\r\n                        {\r\n                            ticket.map((items, index) => {\r\n                                return (\r\n                                    <>\r\n                                        <CardTicketHistory\r\n                                            key={index}\r\n                                            date={items.showDate}\r\n                                            time={items.showTime}\r\n                                            movie={items.movie}\r\n                                            cinema={items.cinema}\r\n                                            logo={items.logo}\r\n                                            used={false}\r\n                                        />\r\n                                    </>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default InfoOrderHistory\r\n","E:\\tickitz\\src\\Component\\CardTicketHistory\\CardTicketHistory.js",["269"],"import React, { Component } from 'react'\r\nimport { Col, Card, Row, Button } from 'react-bootstrap'\r\nimport moment from 'moment'\r\n\r\n\r\nfunction CardTicketHistory(props) {\r\n    return (\r\n        <>\r\n            <Row className=\"my-3\">\r\n                <Card className=\"px-0 bg-transparent rounded-3\">\r\n                    <Card.Header className=\"d-flex justify-content-between align-items-center bg-transparent\">\r\n                        <div>\r\n                            <small className='text-muted'>{`${moment(props.date).format('dddd')}, ${moment(props.date).format('LL')} - ${props.time}`}</small>\r\n                            <p className=\"fs-5 fs-bold\">{props.movie}</p>\r\n                        </div>\r\n                        <img src={props.logo} className=\"logo-cinema\" alt=\"cinema\" />\r\n                    </Card.Header>\r\n                    <Card.Body className=\"px-4\">\r\n                        <Row className=\"d-flex justify-content-lg-between align-items-center\">\r\n                            {\r\n                                props.used ?\r\n                                <Col>\r\n                                    <Button variant=\"secondary\" className=\"py-2 btn-ticket\">Ticket used</Button>\r\n                                </Col>\r\n                                :\r\n                                <Col>\r\n                                    <Button variant=\"success\" className=\"py-2 btn-ticket\">Ticket in active</Button>\r\n                                </Col>\r\n                            }\r\n\r\n                            <Col lg={3} className=\"position-relative d-flex align-items-center my-4\">\r\n                                <select className=\"form-control py-2 bg-transparent border-0 text-muted\" id=\"inputGroupSelect02\">\r\n                                    <option selected>Show Details</option>\r\n                                </select>\r\n                                <i className=\"fas fa-chevron-down position-absolute d-none d-lg-block text-muted\" style={{ right: '20%' }} />\r\n                                <i className=\"fas fa-chevron-down position-absolute d-block d-lg-none text-muted\" style={{ left: '32%' }} />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default CardTicketHistory","E:\\tickitz\\src\\Pages\\Admin\\Admin.js",[],"E:\\tickitz\\src\\Component\\BodyAdmin\\BodyAdmin.js",["270","271","272","273","274","275","276","277","278"],"E:\\tickitz\\src\\DataDummy\\DataMovieNowShow.js",[],["279","280"],"E:\\tickitz\\src\\DataDummy\\CinemaList.js",[],"E:\\tickitz\\src\\Router\\PrivateRoute.js",[],"E:\\tickitz\\src\\Redux\\store.js",[],"E:\\tickitz\\src\\Redux\\Reducer\\index.js",[],"E:\\tickitz\\src\\Redux\\Reducer\\auth.js",[],"E:\\tickitz\\src\\Redux\\Action\\auth.js",[],"E:\\tickitz\\src\\Helper\\http.js",[],"E:\\tickitz\\src\\Redux\\Reducer\\register.js",[],"E:\\tickitz\\src\\Redux\\Action\\register.js",[],"E:\\tickitz\\src\\Redux\\Reducer\\transaction.js",[],"E:\\tickitz\\src\\Redux\\Action\\transaction.js",[],"E:\\tickitz\\src\\Redux\\Reducer\\findSchedule.js",[],"E:\\tickitz\\src\\Redux\\Action\\findSchedule.js",[],"E:\\tickitz\\src\\Redux\\Reducer\\movieSelected.js",[],"E:\\tickitz\\src\\Redux\\Action\\movieSelected.js",[],{"ruleId":"281","replacedBy":"282"},{"ruleId":"283","replacedBy":"284"},{"ruleId":"285","severity":1,"message":"286","line":41,"column":8,"nodeType":"287","endLine":41,"endColumn":20,"suggestions":"288"},{"ruleId":"285","severity":1,"message":"289","line":22,"column":8,"nodeType":"287","endLine":22,"endColumn":10,"suggestions":"290"},{"ruleId":"291","severity":1,"message":"292","line":5,"column":60,"nodeType":"293","messageId":"294","endLine":5,"endColumn":80},{"ruleId":"285","severity":1,"message":"295","line":44,"column":8,"nodeType":"287","endLine":44,"endColumn":18,"suggestions":"296"},{"ruleId":"291","severity":1,"message":"297","line":10,"column":12,"nodeType":"293","messageId":"294","endLine":10,"endColumn":21},{"ruleId":"285","severity":1,"message":"298","line":75,"column":8,"nodeType":"287","endLine":75,"endColumn":10,"suggestions":"299"},{"ruleId":"285","severity":1,"message":"300","line":82,"column":8,"nodeType":"287","endLine":82,"endColumn":14,"suggestions":"301"},{"ruleId":"302","severity":1,"message":"303","line":159,"column":107,"nodeType":"304","messageId":"305","endLine":159,"endColumn":109},{"ruleId":"302","severity":1,"message":"303","line":159,"column":121,"nodeType":"304","messageId":"305","endLine":159,"endColumn":123},{"ruleId":"291","severity":1,"message":"306","line":12,"column":11,"nodeType":"293","messageId":"294","endLine":12,"endColumn":21},{"ruleId":"291","severity":1,"message":"307","line":1,"column":17,"nodeType":"293","messageId":"294","endLine":1,"endColumn":26},{"ruleId":"291","severity":1,"message":"308","line":12,"column":12,"nodeType":"293","messageId":"294","endLine":12,"endColumn":21},{"ruleId":"285","severity":1,"message":"309","line":43,"column":8,"nodeType":"287","endLine":43,"endColumn":10,"suggestions":"310"},{"ruleId":"291","severity":1,"message":"308","line":11,"column":16,"nodeType":"293","messageId":"294","endLine":11,"endColumn":25},{"ruleId":"285","severity":1,"message":"311","line":28,"column":12,"nodeType":"287","endLine":28,"endColumn":14,"suggestions":"312"},{"ruleId":"291","severity":1,"message":"313","line":1,"column":17,"nodeType":"293","messageId":"294","endLine":1,"endColumn":26},{"ruleId":"285","severity":1,"message":"314","line":22,"column":8,"nodeType":"287","endLine":22,"endColumn":10,"suggestions":"315"},{"ruleId":"291","severity":1,"message":"307","line":1,"column":17,"nodeType":"293","messageId":"294","endLine":1,"endColumn":26},{"ruleId":"291","severity":1,"message":"316","line":13,"column":12,"nodeType":"293","messageId":"294","endLine":13,"endColumn":24},{"ruleId":"291","severity":1,"message":"317","line":14,"column":12,"nodeType":"293","messageId":"294","endLine":14,"endColumn":20},{"ruleId":"291","severity":1,"message":"318","line":17,"column":12,"nodeType":"293","messageId":"294","endLine":17,"endColumn":21},{"ruleId":"291","severity":1,"message":"319","line":20,"column":12,"nodeType":"293","messageId":"294","endLine":20,"endColumn":23},{"ruleId":"291","severity":1,"message":"320","line":21,"column":12,"nodeType":"293","messageId":"294","endLine":21,"endColumn":21},{"ruleId":"291","severity":1,"message":"321","line":24,"column":12,"nodeType":"293","messageId":"294","endLine":24,"endColumn":16},{"ruleId":"291","severity":1,"message":"322","line":25,"column":12,"nodeType":"293","messageId":"294","endLine":25,"endColumn":20},{"ruleId":"291","severity":1,"message":"323","line":26,"column":11,"nodeType":"293","messageId":"294","endLine":26,"endColumn":19},{"ruleId":"285","severity":1,"message":"324","line":143,"column":8,"nodeType":"287","endLine":143,"endColumn":10,"suggestions":"325"},{"ruleId":"281","replacedBy":"326"},{"ruleId":"283","replacedBy":"327"},"no-native-reassign",["328"],"no-negated-in-lhs",["329"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchDataSchedule' and 'idMovie'. Either include them or remove the dependency array.","ArrayExpression",["330"],"React Hook useEffect has a missing dependency: 'getDetailMovie'. Either include it or remove the dependency array.",["331"],"no-unused-vars","'selectedShowTimeName' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getNameCinema'. Either include it or remove the dependency array.",["332"],"'statusRes' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'idCinema'. Either include it or remove the dependency array.",["333"],"React Hook useEffect has missing dependencies: 'cinemaName', 'dispatch', 'showDate', 'showtimeName', and 'titleMovie'. Either include them or remove the dependency array.",["334"],"no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","'priceMovie' is assigned a value but never used.","'Component' is defined but never used.","'statusres' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dateShow', 'idMovie', 'idUser', 'idcinema', 'idshowtime', 'listSeat', 'tokenUser', and 'totalPayment'. Either include them or remove the dependency array.",["335"],"React Hook useEffect has a missing dependency: 'idshowtime'. Either include it or remove the dependency array.",["336"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'token'. Either include it or remove the dependency array.",["337"],"'selectCinema' is assigned a value but never used.","'dateShow' is assigned a value but never used.","'movieName' is assigned a value but never used.","'releaseDate' is assigned a value but never used.","'directors' is assigned a value but never used.","'cast' is assigned a value but never used.","'synopsis' is assigned a value but never used.","'duration' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getShowTime'. Either include it or remove the dependency array.",["338"],["328"],["329"],"no-global-assign","no-unsafe-negation",{"desc":"339","fix":"340"},{"desc":"341","fix":"342"},{"desc":"343","fix":"344"},{"desc":"345","fix":"346"},{"desc":"347","fix":"348"},{"desc":"349","fix":"350"},{"desc":"351","fix":"352"},{"desc":"353","fix":"354"},{"desc":"355","fix":"356"},"Update the dependencies array to be: [date, city, fetchDataSchedule, idMovie]",{"range":"357","text":"358"},"Update the dependencies array to be: [getDetailMovie]",{"range":"359","text":"360"},"Update the dependencies array to be: [cinemaId, getNameCinema]",{"range":"361","text":"362"},"Update the dependencies array to be: [idCinema]",{"range":"363","text":"364"},"Update the dependencies array to be: [cinemaName, dispatch, seat, showDate, showtimeName, titleMovie]",{"range":"365","text":"366"},"Update the dependencies array to be: [dateShow, idMovie, idUser, idcinema, idshowtime, listSeat, tokenUser, totalPayment]",{"range":"367","text":"368"},"Update the dependencies array to be: [idshowtime]",{"range":"369","text":"370"},"Update the dependencies array to be: [token]",{"range":"371","text":"372"},"Update the dependencies array to be: [getShowTime]",{"range":"373","text":"374"},[1704,1716],"[date, city, fetchDataSchedule, idMovie]",[827,829],"[getDetailMovie]",[1468,1478],"[cinemaId, getNameCinema]",[3048,3050],"[idCinema]",[3256,3262],"[cinemaName, dispatch, seat, showDate, showtimeName, titleMovie]",[1938,1940],"[dateShow, idMovie, idUser, idcinema, idshowtime, listSeat, tokenUser, totalPayment]",[1245,1247],"[idshowtime]",[763,765],"[token]",[5521,5523],"[getShowTime]"]